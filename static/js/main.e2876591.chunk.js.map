{"version":3,"sources":["chibi.gif","Components/UdacTable.js","Components/AddUdac.js","Components/Udacs.js","Components/Preview.js","Components/LoginModal.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UdacTable","_ref","udaclist","deleteUdac","updateUdac","handleUpdateShow","react_default","a","createElement","className","Table","hover","responsive","size","length","map","udac","index","key","id","name","Button","onClick","variant","colSpan","AddUdac","props","Form","onSubmit","e","preventDefault","udacName","target","formUdacName","value","udaclink","formImageLink","link","addUdac","alert","Group","controlId","Label","Control","type","placeholder","Udacs","udacs","imagePreview","handleSearch","search","handleSelectSuggestion","onChange","evt","autoComplete","ListGroup","Item","action","Preview","Card","Body","Title","includes","Img","src","Image","Cover","fluid","LoginModal","show","handleClose","handleLogin","Modal","onHide","Header","closeButton","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","_useState","useState","_useState2","Object","slicedToArray","setUdacs","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","newUdacs","docs","doc","objectSpread","data","useUdacs","_useState3","_useState4","preview","setPreview","_useState5","_useState6","setSearch","_useState7","_useState8","showLogin","setshowLogin","_useState9","_useState10","adminMode","setadminMode","_useState11","_useState12","adminCredentials","setaadminCredentials","Container","Row","Col","md","Badge","Components_LoginModal","userName","password","formUsername","formPassword","trim","xs","Components_AddUdac","add","Components_UdacTable","delete","Components_Udacs","filter","searchName","sort","toLowerCase","udacsuggestion","Components_Preview","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2876591.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chibi.54fee648.gif\";","import React from 'react'\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport '../App.css';\r\nconst UdacTable = ({udaclist, deleteUdac, updateUdac , handleUpdateShow}) => { \r\n\r\n  return(\r\n    <div className=\"udac-list\">\r\n      \r\n      <Table hover responsive  size=\"md\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-secondary\">#</th>\r\n            <th>Name</th>\r\n            <th >Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n          udaclist.length > 0 ? (\r\n            udaclist.map((udac, index) => (\r\n            <tr key={udac.id}>\r\n              <td className=\"text-secondary\">{index + 1}</td>\r\n              <td >{udac.name}</td>\r\n              <td>\r\n                \r\n                <Button onClick={() => deleteUdac(udac.id)} \r\n                  variant=\"light\" className=\"text-danger\" size=\"sm\" >Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n          ) : (\r\n            <tr>\r\n            <td colSpan={3}>No udacs</td>\r\n          </tr>\r\n          )\r\n        }\r\n          \r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n    )\r\n  }\r\n\r\nexport default UdacTable","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\nconst AddUdac = (props) => {\r\n\r\nconst Add = (e) => {\r\n    e.preventDefault();\r\n    let udacName = e.target.formUdacName.value\r\n    let udaclink = e.target.formImageLink.value\r\n\r\n    if(udacName !== '' && udaclink !== ''){\r\n\r\n        let udac ={\r\n            name: udacName, \r\n            link: udaclink \r\n        }\r\n\r\n        props.addUdac(udac);\r\n        e.target.formUdacName.value = \"\"\r\n        e.target.formImageLink.value = \"\"\r\n    }\r\n    else{\r\n        alert('Put some values damn it!')\r\n    }\r\n    \r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <Form onSubmit={Add}>\r\n            <Form.Group controlId=\"formUdacName\">\r\n                <Form.Label>Udac Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter udac name\" />\r\n            </Form.Group>\r\n           \r\n            <Form.Group controlId=\"formImageLink\">\r\n                <Form.Label>Image Link</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter image link\" />\r\n            </Form.Group>\r\n           \r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    </div>\r\n)\r\n\r\n} \r\n\r\nexport default AddUdac","import React from 'react'\r\nimport { DropdownButton, Dropdown, Form, ListGroup} from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\nconst Udacs = ({udacs, imagePreview, handleSearch, search, handleSelectSuggestion}) => { \r\n\r\n  return(\r\n        <div className=\"search-container\">\r\n            <br></br>\r\n            {/*\r\n            <DropdownButton id=\"dropdown-basic-button\"  title=\"Please Choose Udac\" onSelect={(evt) => imagePreview(evt)}>\r\n            {\r\n                udacs.length > 0 ? (\r\n                    udacs.map( udac => (\r\n                        <Dropdown.Item key={udac.id} eventKey={udac.id}>{udac.name}</Dropdown.Item>\r\n                    ))\r\n                ) : (\r\n                    <p>No Udacs</p>\r\n                )\r\n            }\r\n            </DropdownButton> */}\r\n            \r\n\r\n           \r\n                \r\n                    <Form.Control id=\"dropdown-basic-button\" type=\"text\" onChange={(evt) => handleSearch(evt.target.value)} placeholder=\"Search\" autoComplete=\"off\"/>\r\n                \r\n            <br></br>\r\n            {\r\n            search.length > 0 ? ( <p className=\"text-center text-secondary\" >Results Found</p>) : ('' )\r\n                    }\r\n            <ListGroup className=\"suggestion-list\" variant=\"flush\">\r\n            \r\n                {\r\n                    search.length > 0 ? (\r\n                        \r\n                        search.map( udac => (\r\n                            <ListGroup.Item key={udac.id } className=\"suggest-item\"\r\n                            action\r\n                            onClick={() => handleSelectSuggestion(udac.name)}\r\n                            >{udac.name}</ListGroup.Item>\r\n                        ))\r\n                    ) : (\r\n                        ''\r\n                    )\r\n                }\r\n            </ListGroup>\r\n            \r\n         </div>\r\n\r\n    )\r\n  }\r\n\r\nexport default Udacs","import React from 'react'\r\nimport {  Image, Card} from 'react-bootstrap';\r\nimport '../App.css';\r\nimport Cover from '../chibi.gif'\r\nconst Preview = ({link}) => { \r\n\r\n  return(\r\n        <div>\r\n            {\r\n                link.length > 0 ? (\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <Card.Title className=\"text-center\">\r\n                                <h4>{link[0].name}</h4>\r\n                        </Card.Title>\r\n                        </Card.Body>\r\n                        {\r\n                            link[0].link.includes(\"https\") ? (\r\n                                <Card.Img variant=\"bottom\"  src={link[0].link} />\r\n                            ) : (\r\n                                <p className=\"text-center text-secondary\">Preview not available or link might not working</p>\r\n                            )\r\n                        }\r\n                        \r\n                    </Card>\r\n                ) :\r\n                <Image src={Cover} fluid />\r\n            }\r\n        </div>\r\n\r\n    )\r\n  }\r\n\r\nexport default Preview","import React from 'react'\r\nimport {  Modal, Button, Form} from 'react-bootstrap';\r\nimport '../App.css';\r\nconst LoginModal = ({show, handleClose, handleLogin}) => { \r\n\r\n  return(\r\n        <div>\r\n            <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Login</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form onSubmit={handleLogin}>\r\n              <Form.Group controlId=\"formUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter username\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n\r\n            </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n\r\n    )\r\n  }\r\n\r\nexport default LoginModal","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAWPJu22l5s8wKUxWul0GvO1LEN8h2cKKQ\",\r\n  authDomain: \"udac-lore.firebaseapp.com\",\r\n  databaseURL: \"https://udac-lore.firebaseio.com\",\r\n  projectId: \"udac-lore\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"50825490719\",\r\n  appId: \"1:50825490719:web:0112aed5cc3db3fd\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React, { useState, useEffect } from 'react';\r\nimport UdacTable from './Components/UdacTable';\r\nimport AddUdacForm from './Components/AddUdac';\r\nimport Udacs from './Components/Udacs';\r\nimport ImagePreview from './Components/Preview';\r\nimport LoginModal from './Components/LoginModal';\r\n\r\nimport { Container, Row, Col, Button, Badge } from 'react-bootstrap';\r\nimport firebase from './firebase';\r\nimport './App.css';\r\n\r\nfunction useUdacs() {\r\n  const [udacs, setUdacs] = useState([])\r\n  \r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection('udacs')\r\n      .onSnapshot((snapshot) => {\r\n        const newUdacs = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }))\r\n        setUdacs(newUdacs)\r\n      })\r\n\r\n      return () => unsubscribe()\r\n  }, [])\r\n\r\n  return udacs\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n  const udacs = useUdacs()\r\n  const [preview, setPreview] = useState([])\r\n  const [search, setSearch] = useState(udacs)\r\n  const [showLogin, setshowLogin] = useState(false)\r\n  //temporary\r\n  const [adminMode, setadminMode] = useState(false)\r\n  const [adminCredentials, setaadminCredentials] = useState({})\r\n  \r\n  const handleClose = () => setshowLogin(false)\r\n  const handleShow = () => setshowLogin(true)\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    setaadminCredentials({\r\n      userName: \"admin\",\r\n      password: \"!udacloreadmiN01\"\r\n    })\r\n    let userName = e.target.formUsername.value\r\n    let password = e.target.formPassword.value\r\n    if(userName.trim() === adminCredentials.userName && password.trim() === adminCredentials.password){\r\n      alert(\"Nice! Login Success\")\r\n      handleClose()\r\n      setadminMode(true)\r\n    } else{\r\n      alert(\"Wrong Password! Damn it!\")\r\n    }\r\n    \r\n  }\r\n  const handleLogout = () => {\r\n    setadminMode(false)\r\n  }\r\n\r\n  const addUdac = udac => {\r\n    //udac.id = udacs.length + 1\r\n    //setUdacs([...udacs, udac])\r\n    firebase\r\n      .firestore()\r\n      .collection('udacs')\r\n      .add(udac)\r\n  }\r\n\r\n  const deleteUdac = id => {\r\n    //setUdacs(\r\n      //udacs.filter(udac => \r\n      //  udac.id !== id))\r\n      firebase\r\n      .firestore()\r\n      .collection('udacs')\r\n      .doc(id)\r\n      .delete()\r\n  }\r\n\r\n\r\n  const imagePreview = id => {\r\n    setPreview(udacs.filter(udac => \r\n      udac.id == id))\r\n  }\r\n\r\n  const handleSearch = searchName => {\r\n   // console.log(udac)\r\n      \r\n     setSearch(udacs.sort().filter(udac => \r\n      udac.name.toLowerCase().includes(searchName.toLowerCase()) ))\r\n      setPreview(udacs.sort().filter(udac => \r\n        udac.name.toLowerCase() == searchName.toLowerCase()))\r\n    \r\n  }\r\n\r\n  const handleSelectSuggestion = udacsuggestion =>{\r\n    setPreview(udacs.sort().filter(udac => \r\n      udac.name.toLowerCase() == udacsuggestion.toLowerCase()))\r\n  }\r\n\r\n  return (\r\n    <Container className=\"App\">\r\n      <Row >\r\n        <Col md={11}>\r\n          <h3 className=\"text-secondary \"><span className=\"text-primary logo\">Udac</span> Lore {\r\n            adminMode ? (\r\n              <Badge variant=\"secondary\">Admin</Badge>\r\n            ) :(\r\n              ''\r\n            )\r\n          }\r\n          </h3>\r\n          <LoginModal show={showLogin} handleLogin={handleLogin} handleClose={handleClose}/>\r\n        </Col>\r\n        <Col md={1}>\r\n          {\r\n            adminMode ? (\r\n              <Button variant=\"outline-secondary\" onClick={handleLogout} size=\"sm\">\r\n              Logout\r\n            </Button>\r\n            ) : (\r\n              <Button variant=\"outline-light\" onClick={handleShow} size=\"sm\">\r\n                Login\r\n              </Button>\r\n            )\r\n          }\r\n          \r\n\r\n          \r\n\r\n        </Col>\r\n        \r\n      </Row>\r\n      <hr></hr>\r\n      {\r\n        adminMode ?  (\r\n          <div>\r\n            <Row>\r\n              <Col md={4} xs={12}>\r\n                <div className=\"flex-large\">\r\n                  <h4 className=\"text-secondary\">Add Udac here</h4> \r\n                  <AddUdacForm addUdac={addUdac}/>\r\n                </div>\r\n              </Col>\r\n              <Col md={8} xs={12}>\r\n              <div className=\"flex-large\">\r\n                <h4 className=\"text-secondary\">UDAC List</h4>\r\n                <UdacTable udaclist={udacs} deleteUdac={deleteUdac} />\r\n    \r\n              </div>\r\n              </Col>\r\n              \r\n            </Row>\r\n            <hr></hr>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )\r\n      }\r\n      \r\n     \r\n      <Row>\r\n        <Col xs={12} md={12}>\r\n            <div className=\"preview-container\">\r\n              <div className=\"preview-header text-center\">\r\n                <h3 className=\"text-primary font-weight-bold\">Learn any UDAC anytime</h3>\r\n              <div className=\"searchBox-container\">\r\n                <Udacs udacs={udacs} imagePreview={imagePreview} handleSearch={handleSearch} search={search} handleSelectSuggestion={handleSelectSuggestion}/>\r\n              </div>\r\n              </div>\r\n              <div className=\"preview-body\">\r\n                <ImagePreview link={preview}/>\r\n              </div>\r\n            </div>\r\n        </Col>\r\n      </Row>\r\n     \r\n        \r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}